{% extends 'form_div_layout.html.twig' %}

{% block file_upload_type_widget %}
    {% set type = type|default('hidden') %}
    {% set class = file_type~"_field" %}
    <input type="{{ type }}" {{ block('widget_attributes') }} value="{{ value }}" class="{{ class }}" />

    {% include template with { name: name, value: value, class: class } %}


    <script type="text/javascript">
        $(document).ready(function(){
            var uploader{{ name }} = new plupload.Uploader({
                runtimes : 'html5,flash,silverlight,html4',
                browse_button : 'uploadFile_{{ name }}', // you can pass in id or DOM Element itself
                container: 'container_{{ name }}',
                max_file_size : '10mb',
                url : '{{ path('nfc_upload') }}',
                multi_selection: {{ multi_selection }},
                flash_swf_url : '{{ asset('bundles/nfcupload/swf/plupload.flash.swf') }}',
                silverlight_xap_url : '{{ asset('bundles/nfcupload/swf/plupload.silverlight.xap') }}',
                filters : [
                    {title : "Image files", extensions : "{{ extensions }}"}
                ],
                multipart_params : {
                    "type" : '{{ file_type }}',
                    "field" : '{{ name }}',
                    "secure_token" : '{{ secure_token }}'
                },
                init : {

                    /*FilesAdded: function(up, files) {
                        plupload.each(files, function(file) {
                            $('filelist').innerHTML += '<div id="' + file.id + '">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b></div>';
                        });
                    },*/

                    FilesAdded: function(up, files) {
                        up.start();
                        startFunction{{ name }}();
                    },

                    FileUploaded: function (up, files, response)
                    {
                        callbackFunction{{ name }}(response);
                    },

                    UploadComplete: function  ()
                    {
                        finalFunction{{ name }}();
                    }
                }
            });

            uploader{{ name }}.init();
        });
    </script>
{% endblock %}